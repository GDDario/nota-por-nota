{
    "openapi": "3.0.0",
    "info": {
        "title": "Nota por Nota",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api"
        }
    ],
    "paths": {
        "auth-user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Authenticated User",
                "description": "Retrieve the currently authenticated user's information.",
                "operationId": "authUser",
                "responses": {
                    "200": {
                        "description": "Authenticated user retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthUserSuccessResponseVirtual"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthenticatedResponseVirtual"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "description": "Login with email and password.",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "accept",
                        "in": "header",
                        "description": "Accept header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "application/json"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginSuccessResponseVirtual"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "LoginEndpointVirtual",
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/EmailFieldRequiredResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/InvalidEmailFormatResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PasswordFieldRequiredResponseVirtual"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Generic error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidCredentialsResponseVirtual"
                                }
                            }
                        }
                    }
                }
            }
        },
        "logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Logout the authenticated user.",
                "operationId": "logout",
                "responses": {
                    "204": {
                        "description": "Successful logout, no content returned"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthenticatedResponseVirtual"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh Access Token",
                "description": "Get a new access token using the refresh token.",
                "operationId": "refreshToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokenRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshTokenSuccessResponseVirtual"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "RefreshTokenEndpointVirtual",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/InvalidRefreshTokenResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/RefreshTokenFieldRequiredResponseVirtual"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "User registration endpoint with name, email, username, and password.",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisterSuccessResponseVirtual"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "RegisterEndpointVirtual",
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/EmailAlreadyTakenResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UsernameAlreadyTakenResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PasswordConfirmationErrorResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/NameFieldRequiredErrorResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EmailFieldRequiredErrorResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/UsernameFieldRequiredErrorResponseVirtual"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "reset-password/confirm-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Confirm Reset Token",
                "description": "Confirm the provided token for resetting the password.",
                "operationId": "confirmResetToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmResetTokenRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfirmResetTokenSuccessResponseVirtual"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "ConfirmResetTokenEndpointVirtual",
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/InvalidResetTokenResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ExpiredResetTokenResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TokenFieldRequiredResponseVirtual"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "reset-password": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset Password",
                "description": "Reset the user password with a valid token.",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResetPasswordSuccessResponseVirtual"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "ResetPasswordEndpointVirtual",
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/InvalidResetTokenResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ExpiredResetTokenResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/TokenFieldRequiredResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PasswordFieldRequiredResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PasswordConfirmationMismatchResponseVirtual"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "reset-password/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify Email for Password Reset",
                "description": "Send a verification link to the provided email address to initiate the password reset process.",
                "operationId": "verifyEmailForResetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmailRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification email sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VerifyEmailSuccessResponseVirtual"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": "VerifyEmailForPasswordResetEndpointVirtual",
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/InvalidEmailFormatResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EmailFieldRequiredResponseVirtual"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "user/update-email/confirm-token": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Confirm Email Update Token",
                "description": "Validates the token for confirming an email update.",
                "operationId": "confirmEmailUpdateToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmEmailTokenRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token confirmed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfirmEmailTokenSuccessResponseVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Token errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/InvalidTokenResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ExpiredTokenResponseVirtual"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenFieldRequiredResponseVirtual"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/update-email/send-verification-link": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Send a verification link to the user's email",
                "description": "This endpoint sends an email verification link. The user must be logged in.",
                "operationId": "sendVerificationLink",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SendVerificationLinkSuccessResponseVirtual"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthenticatedResponseVirtual"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update User Details",
                "description": "Updates the user's name or username. The user must be authenticated.",
                "operationId": "updateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserSuccessResponseVirtual"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserValidationErrorResponseVirtual"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthenticatedResponseVirtual"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "user/update-email": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update User Email",
                "description": "Updates the user's email after validating the provided token.",
                "operationId": "updateEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEmailRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateEmailSuccessResponseVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Token errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/InvalidTokenResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ExpiredTokenResponseVirtual"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/EmailFieldRequiredResponseVirtual"
                                        },
                                        {
                                            "$ref": "#/components/schemas/EmailMatchErrorResponseVirtual"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AuthUserSuccessResponseVirtual": {
                "title": "Auth User Success Response",
                "description": "Response containing authenticated user data",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "The authenticated user's information",
                        "properties": {
                            "uuid": {
                                "title": "UUID",
                                "description": "Unique identifier of the user",
                                "type": "object",
                                "example": "e3643a0e-ff80-4617-b976-633ceb54798b"
                            },
                            "name": {
                                "title": "Name",
                                "description": "Name of the authenticated user",
                                "type": "object",
                                "example": "John Doe"
                            },
                            "email": {
                                "title": "Email",
                                "description": "Email of the authenticated user",
                                "type": "object",
                                "example": "jhon@doe.com"
                            },
                            "username": {
                                "title": "Username",
                                "description": "Username of the authenticated user",
                                "type": "object",
                                "example": "jhondoe"
                            },
                            "created_at": {
                                "title": "Created At",
                                "description": "Date and time when the user was created",
                                "type": "object",
                                "example": "2025-01-03T03:01:48.000000Z"
                            },
                            "updated_at": {
                                "title": "Updated At",
                                "description": "Date and time when the user was last updated",
                                "type": "object",
                                "example": "2025-01-03T03:01:48.000000Z"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "EmailFieldRequiredResponseVirtual": {
                "title": "Email Field Required Response",
                "description": "Response for missing email field",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The email field is required."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Validation errors",
                        "properties": {
                            "email": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The email field is required."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "InvalidEmailFormatResponseVirtual": {
                "title": "Invalid Email Format Response",
                "description": "Response for invalid email format",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The email field must be a valid email address."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Validation errors",
                        "properties": {
                            "email": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The email field must be a valid email address."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PasswordFieldRequiredResponseVirtual": {
                "title": "Password Field Required Response",
                "description": "Response returned when the password field is missing.",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The password field is required."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Detailed validation errors",
                        "properties": {
                            "password": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The password field is required."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "TokenFieldRequiredResponseVirtual": {
                "title": "Token Field Required Response",
                "description": "Response when the token field is missing",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The token field is required."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Validation errors",
                        "properties": {
                            "token": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The token field is required."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UnauthenticatedResponseVirtual": {
                "title": "Unauthenticated Response",
                "description": "Error response for unauthenticated requests",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "Unauthenticated."
                    }
                },
                "type": "object"
            },
            "LoginEndpointVirtual": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/EmailFieldRequiredResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/InvalidEmailFormatResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/PasswordFieldRequiredResponseVirtual"
                    }
                ]
            },
            "LoginRequestVirtual": {
                "title": "Login Request",
                "description": "Login body data",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "jhon@doe.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "InvalidCredentialsResponseVirtual": {
                "title": "Invalid Credentials Response",
                "description": "Response returned when invalid credentials are provided.",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "Invalid credentials provided."
                    }
                },
                "type": "object"
            },
            "LoginSuccessResponseVirtual": {
                "title": "Login successful response",
                "description": "Successful JSON response login with user and token information.",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Success message",
                        "type": "string",
                        "example": "Successfully logged in."
                    },
                    "data": {
                        "title": "Data",
                        "description": "Data containing user information and tokens",
                        "properties": {
                            "user": {
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "example": "e3643a0e-ff80-4617-b976-633ceb54798b"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jhon@doe.com"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "jhondoe"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-01-03T03:01:48.000000Z"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-01-03T03:01:48.000000Z"
                                    }
                                },
                                "type": "object"
                            },
                            "access_token": {
                                "type": "string",
                                "example": "39|MYVmLxKl0WlKHlguSLlXxiAX6axPhaL2KRs1qYT107720ec2"
                            },
                            "refresh_token": {
                                "type": "string",
                                "example": "5fb948636531dbb16adc238e61c7b234acca2019b483f80d943b6b88bbc948b9"
                            },
                            "expires_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-01-05T21:43:32.861117Z"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RefreshTokenEndpointVirtual": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InvalidRefreshTokenResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/RefreshTokenFieldRequiredResponseVirtual"
                    }
                ]
            },
            "RefreshTokenRequestVirtual": {
                "title": "Refresh Token Request",
                "description": "Body data for refreshing access token",
                "required": [
                    "refresh_token"
                ],
                "properties": {
                    "refresh_token": {
                        "title": "Refresh Token",
                        "description": "The refresh token used to generate a new access token.",
                        "type": "string",
                        "example": "4be8606e2deff652d104bf8035348cf253406841a44cf0d01ed15f1e477b6225"
                    }
                },
                "type": "object"
            },
            "InvalidRefreshTokenResponseVirtual": {
                "title": "Invalid Refresh Token Response",
                "description": "Error response for invalid refresh token",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The selected refresh token is invalid."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Detailed errors",
                        "properties": {
                            "refresh_token": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The selected refresh token is invalid."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RefreshTokenFieldRequiredResponseVirtual": {
                "title": "Refresh Token Field Required Response",
                "description": "Error response when refresh token is not provided",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The refresh token field is required."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Detailed errors",
                        "properties": {
                            "refresh_token": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The refresh token field is required."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RefreshTokenSuccessResponseVirtual": {
                "title": "Refresh Token Success Response",
                "description": "Successful response containing new access and refresh tokens",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "The data containing tokens and expiry.",
                        "properties": {
                            "access_token": {
                                "title": "Access Token",
                                "description": "The new access token",
                                "type": "object",
                                "example": "44|GnngQJl0zJEpSs2VscSSyQMudJRYG8cQ91eCMmGC6ec307ed"
                            },
                            "refresh_token": {
                                "title": "Refresh Token",
                                "description": "The new refresh token",
                                "type": "object",
                                "example": "4be8606e2deff652d104bf8035348cf253406841a44cf0d01ed15f1e477b6225"
                            },
                            "expires_at": {
                                "title": "Expires At",
                                "description": "The expiration date and time of the access token",
                                "type": "object",
                                "example": "2025-01-06T16:04:55.972540Z"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RegisterEndpointVirtual": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EmailAlreadyTakenResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/UsernameAlreadyTakenResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/PasswordConfirmationErrorResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/NameFieldRequiredErrorResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/EmailFieldRequiredErrorResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/UsernameFieldRequiredErrorResponseVirtual"
                    }
                ]
            },
            "RegisterRequestVirtual": {
                "title": "Register Request",
                "description": "Request body for user registration",
                "required": [
                    "name",
                    "email",
                    "username",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Full name of the user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address of the user",
                        "type": "string",
                        "example": "jhon@doe2.com"
                    },
                    "username": {
                        "title": "Username",
                        "description": "Username of the user",
                        "type": "string",
                        "example": "jhondoe2"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password for the user",
                        "type": "string",
                        "example": "password"
                    },
                    "password_confirmation": {
                        "title": "Password Confirmation",
                        "description": "Password confirmation field",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "EmailAlreadyTakenResponseVirtual": {
                "title": "Email Already Taken Error",
                "description": "Error response when the email is already taken",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The email has already been taken."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Error details",
                        "properties": {
                            "email": {
                                "description": "Email error",
                                "type": "object",
                                "example": "The email has already been taken."
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "EmailFieldRequiredErrorResponseVirtual": {
                "title": "Email Field Required Error",
                "description": "Error response when email field is missing",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The email field is required."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Error details",
                        "properties": {
                            "email": {
                                "description": "Email error",
                                "type": "object",
                                "example": "The email field is required."
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "NameFieldRequiredErrorResponseVirtual": {
                "title": "Name Field Required Error",
                "description": "Error response when name field is missing",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The name field is required."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Error details",
                        "properties": {
                            "name": {
                                "description": "Name error",
                                "type": "object",
                                "example": "The name field is required."
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PasswordConfirmationErrorResponseVirtual": {
                "title": "Password Confirmation Error",
                "description": "Error response when password confirmation does not match",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The password field confirmation does not match."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Error details",
                        "properties": {
                            "password": {
                                "description": "Password confirmation error",
                                "type": "object",
                                "example": "The password field confirmation does not match."
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RegisterSuccessResponseVirtual": {
                "title": "User Created Successfully",
                "description": "Successful registration response with user details and tokens",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Success message",
                        "type": "string",
                        "example": "User created successfully."
                    },
                    "data": {
                        "title": "Data",
                        "description": "User data object",
                        "properties": {
                            "uuid": {
                                "description": "User UUID",
                                "type": "object",
                                "example": "4e2e178e-3404-4735-8e55-2a7203b3bacc"
                            },
                            "name": {
                                "description": "User full name",
                                "type": "object",
                                "example": "John Doe"
                            },
                            "email": {
                                "description": "User email",
                                "type": "object",
                                "example": "jhon@doe.com"
                            },
                            "username": {
                                "description": "User username",
                                "type": "object",
                                "example": "jhondoe2"
                            },
                            "created_at": {
                                "description": "Creation timestamp",
                                "type": "object",
                                "example": "2025-01-06T00:22:53.000000Z"
                            }
                        },
                        "type": "object"
                    },
                    "access_token": {
                        "title": "Access Token",
                        "description": "JWT access token for the user",
                        "type": "string",
                        "example": "40|0Enp6LH3GTo2lRAZ1StZKLCgnoQFEqOrrdp1KTeC3a7d4cec"
                    },
                    "refresh_token": {
                        "title": "Refresh Token",
                        "description": "JWT refresh token for the user",
                        "type": "string",
                        "example": "308616826d0f7a16c23436f048f0c19d81d658e7949e252571d332787d7ab95f"
                    },
                    "expires_at": {
                        "title": "Expires At",
                        "description": "Access token expiration date",
                        "type": "string",
                        "example": "2025-01-05T22:22:54.137246Z"
                    }
                },
                "type": "object"
            },
            "UsernameAlreadyTakenResponseVirtual": {
                "title": "Username Already Taken Error",
                "description": "Error response when the username is already taken",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The username has already been taken."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Error details",
                        "properties": {
                            "username": {
                                "description": "Username error",
                                "type": "object",
                                "example": "The username has already been taken."
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UsernameFieldRequiredErrorResponseVirtual": {
                "title": "Username Field Required Error",
                "description": "Error response when username field is missing",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The username field is required."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Error details",
                        "properties": {
                            "username": {
                                "description": "Username error",
                                "type": "object",
                                "example": "The username field is required."
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ConfirmResetTokenEndpointVirtual": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/InvalidResetTokenResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/ExpiredResetTokenResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/TokenFieldRequiredResponseVirtual"
                    }
                ]
            },
            "ResetPasswordEndpointVirtual": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/InvalidResetTokenResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/ExpiredResetTokenResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/TokenFieldRequiredResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/PasswordFieldRequiredResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/PasswordConfirmationMismatchResponseVirtual"
                    }
                ]
            },
            "VerifyEmailForPasswordResetEndpointVirtual": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/InvalidEmailFormatResponseVirtual"
                    },
                    {
                        "$ref": "#/components/schemas/EmailFieldRequiredResponseVirtual"
                    }
                ]
            },
            "ConfirmResetTokenRequestVirtual": {
                "title": "Confirm Reset Token Request",
                "description": "Request body for confirming the reset password token",
                "required": [
                    "token"
                ],
                "properties": {
                    "token": {
                        "title": "Token",
                        "description": "The token provided to confirm password reset",
                        "type": "string",
                        "example": "Gb3I0Oqmbpohr6Pg81EzK8VQQxguRLhM4gWzk7v6bGot5OEk4yqMvjgwu5CPaiLE7tm3D5Gw852zf4SlO0GBrc11jm1242rtO4DO"
                    }
                },
                "type": "object"
            },
            "ResetPasswordRequestVirtual": {
                "title": "Reset Password Request",
                "description": "Request body for resetting the password",
                "required": [
                    "token",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "token": {
                        "title": "Token",
                        "description": "The reset token",
                        "type": "string",
                        "example": "Gb3I0Oqmbpohr6Pg81EzK8VQQxguRLhM4gWzk7v6bGot5OEk4yqMvjgwu5CPaiLE7tm3D5Gw852zf4SlO0GBrc11jm1242rtO4DO"
                    },
                    "password": {
                        "title": "Password",
                        "description": "The new password",
                        "type": "string",
                        "example": "password"
                    },
                    "password_confirmation": {
                        "title": "Password Confirmation",
                        "description": "Password confirmation",
                        "type": "string",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "VerifyEmailRequestVirtual": {
                "title": "Verify Email Request",
                "description": "Request body for verifying email for password reset",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "Email address of the user requesting password reset",
                        "type": "string",
                        "example": "john@doe.com"
                    }
                },
                "type": "object"
            },
            "ConfirmResetTokenSuccessResponseVirtual": {
                "title": "Confirm Reset Token Success Response",
                "description": "Response when the reset password token is confirmed successfully",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Success message",
                        "type": "string",
                        "example": "Token confirmed successfully."
                    }
                },
                "type": "object"
            },
            "ExpiredResetTokenResponseVirtual": {
                "title": "Expired Reset Token Response",
                "description": "Response when the reset password token is expired",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "Invalid token provided."
                    },
                    "error": {
                        "title": "Error",
                        "description": "Detailed error message",
                        "type": "string",
                        "example": "Token already expired."
                    }
                },
                "type": "object"
            },
            "InvalidResetTokenResponseVirtual": {
                "title": "Invalid Reset Token Response",
                "description": "Response when the reset password token is invalid or already used",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "Invalid token provided."
                    },
                    "error": {
                        "title": "Error",
                        "description": "Detailed error message",
                        "type": "string",
                        "example": "Invalid or already used token."
                    }
                },
                "type": "object"
            },
            "PasswordConfirmationMismatchResponseVirtual": {
                "title": "Password Confirmation Mismatch Response",
                "description": "Response when the password confirmation does not match",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The password field confirmation does not match."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Validation errors",
                        "properties": {
                            "password": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The password field confirmation does not match."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ResetPasswordSuccessResponseVirtual": {
                "title": "Reset Password Success Response",
                "description": "Response when the password is reset successfully",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Success message",
                        "type": "string",
                        "example": "Password reset successfully!"
                    }
                },
                "type": "object"
            },
            "VerifyEmailSuccessResponseVirtual": {
                "title": "Verify Email Success Response",
                "description": "Response when the email verification link is sent successfully",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Success message",
                        "type": "string",
                        "example": "If the email exists, we will send a verification link to you continue the reset process."
                    }
                },
                "type": "object"
            },
            "ConfirmEmailTokenRequestVirtual": {
                "title": "Confirm Email Token Request",
                "description": "Request body for confirming email token",
                "required": [
                    "token"
                ],
                "properties": {
                    "token": {
                        "title": "Token",
                        "description": "The token to confirm the email update",
                        "type": "string",
                        "example": "9E8YWlQionBHFAr4M27q5SpzWwyXANWdLbbmlugLI9L6ooxQ3HCPvaLoNtNYomB78gnGokmJr5UuytNs21w3CRimWakDtBnY6pAM"
                    }
                },
                "type": "object"
            },
            "SendVerificationLinkRequestVirtual": {
                "title": "Send Verification Link Request",
                "description": "Request payload for sending email verification link",
                "type": "object"
            },
            "UpdateEmailRequestVirtual": {
                "title": "UpdateEmailRequest",
                "description": "Request body for updating email",
                "required": [
                    "token",
                    "email",
                    "email_confirmation"
                ],
                "properties": {
                    "token": {
                        "title": "Token",
                        "description": "Token to validate email update",
                        "type": "string",
                        "example": "SFsWIVQbT8QDiXQyddIPRiYrj900EHpsPpnhGj3R6VmdtZMiV77GBQANaEHgH4hjl2k8kRgPdgE4MOGMoJAJlBQlOt45AJ7XhA3v"
                    },
                    "email": {
                        "title": "Email",
                        "description": "New email address",
                        "type": "string",
                        "format": "email",
                        "example": "new_john@doe.com"
                    },
                    "email_confirmation": {
                        "title": "Email Confirmation",
                        "description": "Confirmation of the new email address",
                        "type": "string",
                        "format": "email",
                        "example": "new_john@doe.com"
                    }
                },
                "type": "object"
            },
            "UpdateUserRequestVirtual": {
                "title": "UpdateUserRequest",
                "description": "Request body for updating user details",
                "required": [
                    "name",
                    "username"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "The updated name of the user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "username": {
                        "title": "Username",
                        "description": "The updated username of the user",
                        "type": "string",
                        "example": "Jhondoe"
                    }
                },
                "type": "object"
            },
            "ConfirmEmailTokenSuccessResponseVirtual": {
                "title": "Confirm Email Token Success Response",
                "description": "Response after successfully confirming the email token",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Success message",
                        "type": "string",
                        "example": "Token confirmed successfully."
                    }
                },
                "type": "object"
            },
            "EmailMatchErrorResponseVirtual": {
                "title": "EmailMatchErrorResponse",
                "description": "Response when email and confirmation do not match",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The email field confirmation does not match."
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Detailed errors",
                        "properties": {
                            "email": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The email field confirmation does not match."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ExpiredTokenResponseVirtual": {
                "title": "Expired Token Response",
                "description": "Response when the provided token is expired",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "Invalid token provided."
                    },
                    "error": {
                        "title": "Error",
                        "description": "Detailed error message",
                        "type": "string",
                        "example": "Token already expired."
                    }
                },
                "type": "object"
            },
            "InvalidTokenResponseVirtual": {
                "title": "Invalid Token Response",
                "description": "Response when an invalid token is provided",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "Invalid token provided."
                    },
                    "error": {
                        "title": "Error",
                        "description": "Detailed error message",
                        "type": "string",
                        "example": "Invalid or already used token."
                    }
                },
                "type": "object"
            },
            "SendVerificationLinkSuccessResponseVirtual": {
                "title": "Send Verification Link Success Response",
                "description": "Successful response when the verification email is sent",
                "properties": {
                    "message": {
                        "title": "Message",
                        "type": "string",
                        "example": "Email sent successfully. Check your inbox for further explanation."
                    }
                },
                "type": "object"
            },
            "UpdateEmailSuccessResponseVirtual": {
                "title": "UpdateEmailSuccessResponse",
                "description": "Response for successful email update",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Success message",
                        "type": "string",
                        "example": "Email updated successfully!"
                    }
                },
                "type": "object"
            },
            "UpdateUserSuccessResponseVirtual": {
                "title": "UpdateUserSuccessResponse",
                "description": "Response for successful user update",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Response data",
                        "properties": {
                            "user": {
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "example": "4575a824-8014-3712-853a-8f8b32351610"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@doe.com"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "Jhondoe"
                                    },
                                    "picture": {
                                        "type": "string",
                                        "example": "2025-01-13 22:53:44"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-01-14T01:37:36.000000Z"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": null,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UpdateUserValidationErrorResponseVirtual": {
                "title": "UpdateUserValidationErrorResponse",
                "description": "Response for validation errors when updating user details",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Error message",
                        "type": "string",
                        "example": "The name field is required when username is not present. (and 1 more error)"
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "Validation errors",
                        "properties": {
                            "name": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The name field is required when username is not present."
                                }
                            },
                            "username": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The username field is required when name is not present."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}